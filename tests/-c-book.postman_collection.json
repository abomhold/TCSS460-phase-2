{
    "info": {
        "_postman_id": "b7b9fa62-b7b1-4c4c-991e-29c1e0d6868a",
        "name": "/c/book",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "_exporter_id": "36229530"
    },
    "item": [
        {
            "name": "Register for JWT",
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            "const firstname = pm.variables.replaceIn('{{$randomFirstName}}')",
                            "const lastname = pm.variables.replaceIn('{{$randomLastName}}')",
                            "const email = pm.variables.replaceIn('{{$randomEmail}}')",
                            "const password = pm.variables.replaceIn('{{$randomPassword}}')",
                            "const username = `${firstname}-${lastname}`",
                            "const role = Math.floor(Math.random() * 5 + 1)",
                            "const phone = pm.variables.replaceIn('{{$randomPhoneNumber}}')",
                            "",
                            "const body = {",
                            "    firstname,",
                            "    lastname,",
                            "    email,",
                            "    password,",
                            "    username,",
                            "    role,",
                            "    phone",
                            "}",
                            "",
                            "pm.collectionVariables.set('user', JSON.stringify(body))"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 201\", function () {",
                            "    pm.response.to.have.status(201);",
                            "});",
                            "pm.test(\"Access token present\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    const token = jsonData.accessToken;",
                            "    pm.expect(token).to.not.be.empty",
                            "    pm.collectionVariables.set('JWT', token)",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{{user}}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{base_url}}/register",
                    "host": ["{{base_url}}"],
                    "path": ["register"]
                }
            },
            "response": []
        },
        {
            "name": "Create a book",
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            "let isbn13 = '100'",
                            "// Generate random ISBN13",
                            "for (i = 0; i < 10; i++) {",
                            "    const num = Math.floor(Math.random() * 10)",
                            "    isbn13 = isbn13 + String(num)",
                            "}",
                            "",
                            "const title = pm.variables.replaceIn('{{$randomWords}}')",
                            "const authors = pm.variables.replaceIn('{{$randomFullName}}')",
                            "",
                            "const book = {",
                            "    isbn13,",
                            "    title,",
                            "    authors",
                            "}",
                            "",
                            "pm.collectionVariables.set('book', JSON.stringify(book))"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 201\", function () {",
                            "    pm.response.to.have.status(201);",
                            "});",
                            "pm.test(\"Correct response book\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.data).to.not.be.empty;",
                            "    pm.expect(jsonData.data.isbn13).to.eql(",
                            "        JSON.parse(",
                            "            pm.collectionVariables.get('book')",
                            "        ).isbn13",
                            "    );",
                            "    pm.collectionVariables.set('book', JSON.stringify(jsonData.data))",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{JWT}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{{book}}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{base_url}}/c/book",
                    "host": ["{{base_url}}"],
                    "path": ["c", "book"]
                }
            },
            "response": []
        },
        {
            "name": "Create BAD book",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 400\", function () {",
                            "    pm.response.to.have.status(400);",
                            "});",
                            "pm.test(\"Body states invalid ISBN13\", function () {",
                            "    pm.expect(pm.response.text().toLowerCase()).to.include(\"invalid isbn\");",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{JWT}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"isbn13\": \"123\"\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{base_url}}/c/book",
                    "host": ["{{base_url}}"],
                    "path": ["c", "book"]
                }
            },
            "response": []
        },
        {
            "name": "Book by ISBN",
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            "const isbn = JSON.parse(",
                            "    pm.collectionVariables.get('book')",
                            ").isbn13",
                            "",
                            "pm.collectionVariables.set('isbn', isbn)"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "pm.test(\"Previously created book exists\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.data.length).to.be.gte(1);",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{JWT}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/c/book?isbn13={{isbn}}",
                    "host": ["{{base_url}}"],
                    "path": ["c", "book"],
                    "query": [
                        {
                            "key": "isbn13",
                            "value": "{{isbn}}"
                        }
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Book by BAD ISBN",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 400\", function () {",
                            "    pm.response.to.have.status(400);",
                            "});",
                            "pm.test(\"Body matches string\", function () {",
                            "    pm.expect(pm.response.text().toLowerCase()).to.include(\"invalid isbn\");",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{JWT}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/c/book?isbn13={{$randomInt}}",
                    "host": ["{{base_url}}"],
                    "path": ["c", "book"],
                    "query": [
                        {
                            "key": "isbn13",
                            "value": "{{$randomInt}}"
                        }
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Book by Author",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "pm.test(\"Created book exists\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.data.length).to.be.gt(0);",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                },
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            "const author = JSON.parse(",
                            "    pm.collectionVariables.get('book')",
                            ").authors",
                            "",
                            "pm.collectionVariables.set('author', author)"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{JWT}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/c/book?authors={{author}}",
                    "host": ["{{base_url}}"],
                    "path": ["c", "book"],
                    "query": [
                        {
                            "key": "authors",
                            "value": "{{author}}"
                        }
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Book by BAD Author",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 404\", function () {",
                            "    pm.response.to.have.status(404);",
                            "});",
                            "pm.test(\"Number as author should have no books\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.data.length).to.eql(0);",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{JWT}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/c/book?authors={{$randomBankAccount}}",
                    "host": ["{{base_url}}"],
                    "path": ["c", "book"],
                    "query": [
                        {
                            "key": "authors",
                            "value": "{{$randomBankAccount}}"
                        }
                    ]
                }
            },
            "response": []
        },
        {
            "name": "Book by ID",
            "event": [
                {
                    "listen": "prerequest",
                    "script": {
                        "exec": [
                            "const id = JSON.parse(",
                            "    pm.collectionVariables.get('book')",
                            ").id",
                            "",
                            "pm.collectionVariables.set('id', id)"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                },
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});",
                            "pm.test(\"Returned book is correct\", function () {",
                            "    var jsonData = pm.response.json();",
                            "    pm.expect(jsonData.data.length).to.eql(1)",
                            "    pm.expect(jsonData.data[0].id).to.eql(",
                            "        pm.collectionVariables.get('id')",
                            "    );",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{JWT}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/c/book/{{id}}",
                    "host": ["{{base_url}}"],
                    "path": ["c", "book", "{{id}}"]
                }
            },
            "response": []
        },
        {
            "name": "Book by BAD ID",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 400\", function () {",
                            "    pm.response.to.have.status(400);",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "auth": {
                    "type": "bearer",
                    "bearer": [
                        {
                            "key": "token",
                            "value": "{{JWT}}",
                            "type": "string"
                        }
                    ]
                },
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/c/book/{{$randomFirstName}}",
                    "host": ["{{base_url}}"],
                    "path": ["c", "book", "{{$randomFirstName}}"]
                }
            },
            "response": []
        }
    ],
    "variable": [
        {
            "key": "user",
            "value": ""
        },
        {
            "key": "JWT",
            "value": ""
        },
        {
            "key": "book",
            "value": ""
        },
        {
            "key": "isbn",
            "value": ""
        },
        {
            "key": "author",
            "value": ""
        },
        {
            "key": "id",
            "value": ""
        }
    ]
}
