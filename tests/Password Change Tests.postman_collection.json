{
	"info": {
		"_postman_id": "8c0f8021-91d4-4e5d-a8e9-bd3ea1fb2359",
		"name": "Password Change Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "36229530"
	},
	"item": [
		{
			"name": "Register Test User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const firstname = pm.variables.replaceIn('{{$randomFirstName}}')",
							"const lastname = pm.variables.replaceIn('{{$randomLastName}}')",
							"const email = pm.variables.replaceIn('{{$randomEmail}}')",
							"const password = 'Password123!'",
							"const username = `${firstname}-${lastname}`",
							"const role = Math.floor(Math.random() * 5 + 1)",
							"const phone = pm.variables.replaceIn('{{$randomPhoneNumber}}')",
							"",
							"const body = {",
							"    firstname,",
							"    lastname,",
							"    email,",
							"    password,",
							"    username,",
							"    role,",
							"    phone",
							"}",
							"",
							"pm.collectionVariables.set('user', JSON.stringify(body))",
							"pm.collectionVariables.set('test_email', email)",
							"pm.collectionVariables.set('test_password', password)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Access token present\", function () {",
							"    var jsonData = pm.response.json();",
							"    const token = jsonData.accessToken;",
							"    pm.expect(token).to.not.be.empty",
							"    pm.collectionVariables.set('JWT', token)",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{user}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login with Test User",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const email = pm.collectionVariables.get('test_email')",
							"const password = pm.collectionVariables.get('test_password')",
							"",
							"const body = {",
							"    email,",
							"    password",
							"}",
							"",
							"pm.collectionVariables.set('login_body', JSON.stringify(body))"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Access token present\", function () {",
							"    var jsonData = pm.response.json();",
							"    const token = jsonData.accessToken;",
							"    pm.expect(token).to.not.be.empty",
							"    pm.collectionVariables.set('JWT', token)",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{login_body}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Password - Success",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const currentPassword = pm.collectionVariables.get('test_password')",
							"const newPassword = pm.variables.replaceIn('{{$randomPassword}}')",
							"",
							"const body = {",
							"    currentPassword,",
							"    newPassword",
							"}",
							"",
							"pm.collectionVariables.set('password_change_body', JSON.stringify(body))",
							"pm.collectionVariables.set('new_password', newPassword)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response contains success:true\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.equal(true);",
							"    pm.expect(jsonData.message).to.equal(\"Password changed successfully\");",
							"});",
							"",
							"// Update the stored password for subsequent tests",
							"pm.collectionVariables.set('test_password', pm.collectionVariables.get('new_password'))"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{password_change_body}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/change-password",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"change-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login with New Password",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const email = pm.collectionVariables.get('test_email')",
							"const password = pm.collectionVariables.get('test_password')",
							"",
							"const body = {",
							"    email,",
							"    password",
							"}",
							"",
							"pm.collectionVariables.set('login_body', JSON.stringify(body))"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Access token present\", function () {",
							"    var jsonData = pm.response.json();",
							"    const token = jsonData.accessToken;",
							"    pm.expect(token).to.not.be.empty",
							"    pm.collectionVariables.set('JWT', token)",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{login_body}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/login",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Password - Missing Parameters",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const body = {",
							"    currentPassword: pm.collectionVariables.get('test_password')",
							"    // newPassword is intentionally missing",
							"}",
							"",
							"pm.collectionVariables.set('password_change_body_missing', JSON.stringify(body))"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Response contains correct error message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.equal(false);",
							"    pm.expect(jsonData.message).to.equal(\"Missing required information\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{password_change_body_missing}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/change-password",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"change-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Password - Invalid New Password",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const body = {",
							"    currentPassword: pm.collectionVariables.get('test_password'),",
							"    newPassword: \"short\" // Too short password",
							"}",
							"",
							"pm.collectionVariables.set('password_change_body_invalid', JSON.stringify(body))"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Response contains correct error message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.equal(false);",
							"    pm.expect(jsonData.message).to.equal(\"Invalid new password - must be at least 8 characters\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{password_change_body_invalid}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/change-password",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"change-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Password - Incorrect Current Password",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const body = {",
							"    currentPassword: \"IncorrectPassword123!\", // Incorrect password",
							"    newPassword: \"ValidNewPassword123!\"",
							"}",
							"",
							"pm.collectionVariables.set('password_change_body_wrong_current', JSON.stringify(body))"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"pm.test(\"Response contains correct error message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.equal(false);",
							"    pm.expect(jsonData.message).to.equal(\"Current password is incorrect\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{password_change_body_wrong_current}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/change-password",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"change-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Password - No Token",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const body = {",
							"    currentPassword: pm.collectionVariables.get('test_password'),",
							"    newPassword: \"ValidNewPassword123!\"",
							"}",
							"",
							"pm.collectionVariables.set('password_change_body_no_auth', JSON.stringify(body))"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"pm.test(\"Response indicates auth token issue\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.equal(false);",
							"    pm.expect(jsonData.message).to.include(\"Auth token\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{password_change_body_no_auth}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/change-password",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"change-password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Change Password - Invalid Token",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const body = {",
							"    currentPassword: pm.collectionVariables.get('test_password'),",
							"    newPassword: \"ValidNewPassword123!\"",
							"}",
							"",
							"pm.collectionVariables.set('password_change_body_invalid_token', JSON.stringify(body))"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 403\", function () {",
							"    pm.response.to.have.status(403);",
							"});",
							"pm.test(\"Response indicates invalid token\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.success).to.equal(false);",
							"    pm.expect(jsonData.message).to.include(\"Token\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "invalidtokenstring123",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{{password_change_body_invalid_token}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/change-password",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"change-password"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "user",
			"value": ""
		},
		{
			"key": "JWT",
			"value": ""
		},
		{
			"key": "test_email",
			"value": ""
		},
		{
			"key": "test_password",
			"value": ""
		},
		{
			"key": "new_password",
			"value": ""
		},
		{
			"key": "login_body",
			"value": ""
		},
		{
			"key": "password_change_body",
			"value": ""
		},
		{
			"key": "password_change_body_missing",
			"value": ""
		},
		{
			"key": "password_change_body_invalid",
			"value": ""
		},
		{
			"key": "password_change_body_wrong_current",
			"value": ""
		},
		{
			"key": "password_change_body_no_auth",
			"value": ""
		},
		{
			"key": "password_change_body_invalid_token",
			"value": ""
		}
	]
}